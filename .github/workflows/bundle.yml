name: "Bundle app"
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-web:
    uses: utkusarioglu/web/.github/workflows/build-web.yml@main
    # runs-on: ubuntu-latest
    # env:
    #   NODE_ENV: production
    # container: 
    #   image: node:17-slim
    steps:
    #   - name: build web
  #     - name: Checkout Hooks
  #       uses: actions/checkout@v2 
  #       with:
  #         repository: utkusarioglu/hooks
  #         path: hooks
  #     - name: Checkout Web
  #       uses: actions/checkout@v2
  #       with:
  #         repository: utkusarioglu/web
  #         path: web
  #     - name: Install hooks dependencies
  #       working-directory: hooks
  #       run: yarn install --frozen-lockfile --production false
  #     - name: Build web
  #       working-directory: web
  #       run: |
  #         apt-get update
  #         apt-get install git -y
  #         yarn install --frozen-lockfile --production false
  #         yarn ci
      - name: Cache Web build
        uses: actions/cache@v2
        env:
          cache-name: utkusarioglu-web-build-cache
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: web/build
          key: utkusarioglu-web-build-cache
  #         # key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #         # restore-keys: |
  #         #   ${{ runner.os }}-build-${{ env.cache-name }}-
  #         #   ${{ runner.os }}-build-
  #         #   ${{ runner.os }}-

  publish-tauri:
    needs: build-web
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    env:
      NODE_ENV: production
    steps:
      - name: Checkout desktop
        uses: actions/checkout@v3
        with:
          path: desktop
      - name: Pull Web build
        uses: actions/cache@v2
        with: 
          path: web/build
          key: utkusarioglu-web-build-cache

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 17
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # - name: install dependencies (ubuntu only)
      #   if: matrix.platform == 'ubuntu-latest'
      #   working-directory: desktop
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      
      - name: Install desktop dependencies
        working-directory: desktop
        run: |
          yarn install --network-timeout 1000000 --frozen-lockfile --production false
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: desktop
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
      - name: Builds as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: builds
          path: desktop/src-tauri/target/release/bundle
