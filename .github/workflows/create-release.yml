name: "publish"
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    env:
      NODE_ENV: production
    steps:
      - name: Checkout desktop
        uses: actions/checkout@v3
        with:
          path: desktop
      - name: Checkout hooks
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/hooks
          path: ../hooks
      - name: Checkout web
        uses: actions/checkout@v3
        with:
          repository: utkusarioglu/web
          path: ../web

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 17
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # - name: install dependencies (ubuntu only)
      #   if: matrix.platform == 'ubuntu-latest'
      #   working-directory: desktop
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: Install hooks dependencies
        working-directory: ../hooks
        run: yarn install --network-timeout 1000000 --frozen-lockfile
      - name: Build web
        working-directory: ../web
        run: |
          pwd
          ls
          yarn install --network-timeout 1000000 --frozen-lockfile
          yarn ci
      - name: Build Tauri
        working-directory: ../desktop
        run: |
          pwd
          ls
          yarn install --network-timeout 1000000 --frozen-lockfile
          yarn ci
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: desktop
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
      - name: Builds as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: builds
          path: D:\a\desktop\tauri-test\tauri-test\src-tauri\target\release\bundle

  # create-release:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16
  #     - name: get version
  #       run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
  #     - name: create release
  #       id: create_release
  #       uses: actions/create-release@v1.1.0
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: app-v${{ env.PACKAGE_VERSION }}
  #         release_name: "Desktop app v${{ env.PACKAGE_VERSION }}"
  #         body: "See the assets to download this version and install."
  #         draft: true
  #         prerelease: false
  # build-tauri:
  #   needs: create-release
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       # platform: [macos-latest, ubuntu-latest, windows-latest]
  #       platform: [windows-latest]

  #   runs-on: ${{ matrix.platform }}
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: setup node
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: 16
  #   - name: install Rust stable
  #     uses: actions-rs/toolchain@v1
  #     with:
  #       toolchain: stable
  #   - name: install dependencies (ubuntu only)
  #     if: matrix.platform == 'ubuntu-latest'
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
  #   - name: install app dependencies and build it
  #     run: yarn && yarn build
  #   - uses: tauri-apps/tauri-action@v0
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       releaseId: ${{ needs.create-release.outputs.RELEASE_UPLOAD_ID }}
